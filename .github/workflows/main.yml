name: Build and Release

permissions:
  contents: write  # Grants write access to repository contents

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Set up JDK 21
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '21'

      # Step 3: Cache Maven dependencies
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      # Step 4: Build the project using Maven
      - name: Build with Maven
        run: mvn clean package

      # Step 5: Get version from pom.xml
      - name: Get version from pom.xml
        id: get_version
        run: echo "VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      # Step 6: Run tests
      - name: Run tests
        run: mvn test

      # Step 7: Verify jar file path
      - name: List target directory
        run: ls -al target

      # Step 8: Upload the built .jar as a release asset using softprops/action-gh-release
      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: target/WhitelistPlus-${{ env.VERSION }}.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 9: Notify on build status
      - name: Notify on failure
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            github.issues.createComment({
              issue_number: github.context.issue.number,
              owner: github.context.repo.owner,
              repo: github.context.repo.repo,
              body: "The build failed. Please check the details."
            })
